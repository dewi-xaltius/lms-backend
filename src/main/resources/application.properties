spring.application.name=lms-backend
# ===================================================================
# DATABASE CONFIGURATION
# ===================================================================
# Datasource URL - Make sure 'lms_db' is the correct database name
spring.datasource.url=jdbc:mysql://localhost:3306/lms_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true

# Datasource Username - We will set this as an environment variable
spring.datasource.username=${LMS_DB_USERNAME}

# Datasource Password - We will set this as an environment variable
spring.datasource.password=${LMS_DB_PASSWORD}

# MySQL Driver
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# ===================================================================
# JPA / HIBERNATE CONFIGURATION
# ===================================================================
# Hibernate ddl-auto:
#  'create': Drops and recreates the schema on startup. Useful for initial dev, but data is lost.
#  'create-drop': Creates schema on startup, drops on shutdown. Good for testing.
#  'update': Updates the schema if necessary. Good for development once initial schema is stable.
#  'validate': Validates the schema, makes no changes.
#  'none': Disables DDL handling.
spring.jpa.hibernate.ddl-auto=update

# Show SQL queries generated by Hibernate in the console
spring.jpa.show-sql=true

# Pretty print SQL in console
spring.jpa.properties.hibernate.format_sql=true

# Specify the MySQL dialect (use MySQL8Dialect if you are on MySQL 8+)
# For MySQL 5.7 or older, MySQL5Dialect or MySQL57Dialect might be more appropriate.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
# If using MySQL 8 or newer, you might prefer:
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect